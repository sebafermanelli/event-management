<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.solvd.persistence.ClientDAO">
    <resultMap id="ClientResultMap" type="com.solvd.domain.Client" autoMapping="false">
        <id property="id" column="client_id"/>
        <result property="cuit" column="client_cuit"/>
        <result property="businessName" column="client_business_name"/>
        <result property="address" column="client_address"/>
        <result property="phone" column="client_phone"/>
        <result property="email" column="client_email"/>
    </resultMap>

    <insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        Insert into client (cuit, business_name, address, phone, email)
        values (#{client.cuit}, #{client.businessName}, #{client.address}, #{client.phone}, #{client.email})
    </insert>

    <sql id="selectClient">
        Select
        c.id as client_id,
        c.cuit as client_cuit,
        c.business_name as client_business_name,
        c.address as client_address,
        c.phone as client_phone,
        c.email as client_email
        from client c
    </sql>

    <select id="findAll" resultMap="ClientResultMap">
        <include refid="selectClient"/>
    </select>

    <select id="findById" resultMap="ClientResultMap">
        <include refid="selectClient"/>
        where c.id = #{id}
    </select>

    <select id="findManyByColumn" resultMap="ClientResultMap">
        <include refid="selectClient"/>
        where c.${key} = #{value}
    </select>

    <select id="findOneByColumn" resultMap="ClientResultMap">
        <include refid="selectClient"/>
        where c.${key} = #{value}
    </select>

    <delete id="deleteById">
        Delete from client where id = #{id}
    </delete>

    <update id="updateById">
        Update client set
        cuit = #{client.cuit},
        business_name = #{client.businessName},
        address = #{client.address},
        phone = #{client.phone},
        email = #{client.email}
        where id = #{id}
    </update>
</mapper>