<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.solvd.persistence.EventDAO">
    <resultMap id="EventResultMap" type="com.solvd.domain.Event" autoMapping="false">
        <id property="id" column="event_id"/>
        <result property="name" column="event_name"/>
        <result property="theme" column="event_theme"/>
        <result property="baseTicketPrice" column="event_base_ticket_price"/>
        <result property="startDate" column="event_start_date"/>
        <result property="endDate" column="event_end_date"/>
        <result property="address" column="event_address"/>
        <result property="description" column="event_description"/>
        <collection property="rooms" resultMap="com.solvd.persistence.RoomDAO.RoomResultMap"/>
        <collection property="tickets" resultMap="com.solvd.persistence.TicketDAO.TicketResultMap"/>
        <collection property="employees" resultMap="com.solvd.persistence.EmployeeDAO.EmployeeResultMap"/>
    </resultMap>

    <insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        Insert into event (name, theme, base_ticket_price, start_date, end_date, address, description)
        values (#{event.name}, #{event.theme}, #{event.baseTicketPrice}, #{event.startDate}, #{event.endDate}, #{event.address},
        #{event.description})
    </insert>

    <sql id="selectEvent">
        Select
        e.id as employee_id, e.first_name as employee_first_name, e.last_name as employee_last_name, e.address as
        employee_address, e.phone as employee_phone, e.email as employee_email, e.salary as employee_salary,
        ee.id as event_employee_id, ee.role as event_employee_role, ee.employee_id as event_employee_employee_id,
        ee.event_id as event_employee_event_id,
        ev.id as event_id, ev.name as event_name, ev.theme as event_theme, ev.base_ticket_price as
        event_base_ticket_price, ev.start_date as event_start_date, ev.end_date as event_end_date, ev.address as
        event_address, ev.description as event_description
        from employee e
        left join event_employee ee on e.id = ee.employee_id
        left join event ev on ev.id = ee.event_id
    </sql>

    <select id="findAll" resultMap="EventResultMap">
        <include refid="selectEvent"/>
    </select>

    <select id="findById" resultMap="EventResultMap">
        <include refid="selectEvent"/>
        where ev.id = #{id}
    </select>

    <select id="findManyByColumn" resultMap="EventResultMap">
        <include refid="selectEvent"/>
        where ev.#{key} = #{value}
    </select>

    <select id="findOneByColumn" resultMap="EventResultMap">
        <include refid="selectEvent"/>
        where ev.#{key} = #{value}
    </select>

    <delete id="deleteById">
        Delete from event where id = #{id}
    </delete>

    <update id="updateById">
        Update event set
        name = #{event.name},
        theme = #{event.theme},
        base_ticket_price = #{event.baseTicketPrice},
        start_date = #{event.startDate},
        end_date = #{event.endDate},
        address = #{event.address},
        description = #{event.description}
        where id = #{id}
    </update>
</mapper>